global:
  namespace:
    name: "space-tenant"

  labels:
    - name: tenant
      value: my-tenant
    - name: space
      value: my-space

namespace:
  name: "space-tenant"
  create: false

labels:
  - name: tenant
    value: my-tenant
  - name: space
    value: my-space

deploy:
  type: Deployment 
  # type = StatefulSet|Deployment

serviceAccount:
  create: true   # For new sa, creation of sa only in k8s side
  name: ""       # For existing sa, if create is true, name should be an empty string
  provider: ""   # aws|gcp
  arn: ""        # For AWS role
  # gcp_service_account_name: "" # For GCP sa
  project_id: "" # For GCP SA
  cluster_name: ""
  azure_client_id: "" # For Azure Managed Identity

container:
  replicas: 1
  annotationsList:
  - name: description
    value: Fabric on Kubernetes
  resource_allocation:
    limits:
      memory: 8Gi
      cpu: '2'
    requests:
      memory: 2Gi
      cpu: '0.4'
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 60

  # Fabric Image to be populated into Deployment
  image:
    url: "" 
    repoSecret:
      name: "registry-secret"
      enabled: false
      dockerRegistry:
        auths:
          "docker.share.cloud.k2view.com":
            username: ""
            password: ""


# Fabrics Advertising Bound Port (Where it accessable)
listening_port: 3213

storage:
  pvc:
    enabled: true
  securityContext: true
  class: gp2
  alocated_amount: 10Gi

# Wether if Fabric will scale up or not
scaling:
  enabled: false
  targetKind: StatefulSet
  targetName: fabric-stateful-sets
  minReplicas: 1
  maxReplicas: 1
  targetCPU: 90

# Deploy network policy that allow to fabric egress only to cassandra pod
networkPolicy:
  enabled: true

ingress:
  enabled: true
  class_name: "nginx"
  type: "nginx"
  appgw_ssl_certificate_name: ""
  port: 3213
  host: space-tenant.domain
  tlsSecret:
    enabled: false
    key: ""
    crt: ""
    key_b64: ""
    crt_b64: ""

  custom_annotations:
    enabled: false
    annotations:
      - key: kubernetes.io/ingress.class
        value: nginx
      - key: nginx.ingress.kubernetes.io/proxy-body-size
        value: "0"
      - key: nginx.ingress.kubernetes.io/proxy-read-timeout
        value: "7d"
      - key: nginx.ingress.kubernetes.io/ssl-redirect
        value: "false"

mountSecret:
    name: config-secrets
    enabled: false # true for mount the secret on fabric pod, false for mount only on init container
    mountPath: /opt/apps/fabric/config-secrets
    data:
      config: 'fabricdb|MDB_DEFAULT_SCHEMA_CACHE_STORAGE_TYPE|NFS\nfabricdb|MDB_DEFAULT_CACHE_PATH|/opt/apps/fabric/pod_tmp/fdb_cache\ndefault_pubsub|TYPE|MEMORY\ncommon_area_pubsub|TYPE|MEMORY\nfabric|WEB_SESSION_EXPIRATION_TIME_OUT|540\nfabric|ENABLE_BROADWAY_DEBUG_SERVLET|true\ndefault_session|RECONNECT_MAX_DELAY_MS|1000\nfabric|ENABLE_DB_INTERFACE_PROXY|true\nfabric|WEBSERVER_FILTERS|[{\"class\":\"com.k2view.cdbms.ws.ProxyForward\",\"patterns\":[\"/studio/*\"],\"params\":{\"target\":\"http://localhost:3000\",\"isStaticTarget\":true}},{\"class\":\"com.k2view.cdbms.ws.ProxyForward\",\"patterns\":[\"/socket.io/*\"],\"params\":{\"target\":\"http://localhost:3000\",\"isStaticTarget\":false}}];\nfabric|OVERRIDE_API_SCHEMA|HTTPS|ADD\nfabric|OVERRIDE_API_PORT|443|ADD\ndata_discovery|GRAPH_DB_URL|neo4j://dev-neo4j-service:7687\ndata_discovery|GRAPH_DB_USER|neo4j\ndata_discovery|GRAPH_DB_PASSWORD|Q1w2e3r4t5\n'
      cp_files: ''
      idp_cert: ''

secretsList:
  - name: config-secrets
    data:
      config: ''
      cp_files: ''
      idp_cert: ""
      local_key: ''
  - name: common-env-secrets
    data:
      CONFIG_UPDATE_FILE: '/opt/apps/fabric/config-secret/config'
      COPY_FILES: ''
      INIT_CONF: ''
      PROJECT_ID: ''
      PROJECT_NAME: ''
      SPACE_NAME: ''
  - name: cassandra-secrets
    data:
      cassandra.default.user: "cassandra"
      cassandra.default.password: "cassandra"
      cassandra.default.hosts: "cassandra-service"

initSecretsList:
  - name: config-init-secrets
    data:
      IDP_CERT_PATH: ''
      IDP_ROLE: ''
      GIT_BRANCH: ''
      GIT_PATH_IN_REPO: ''
      GIT_REPO: ''
      GIT_TOKEN: ''
      START_FABRIC: 'false' 

affinity:
  type: none  # Options: affinity, anti-affinity, none
  label: 
    name: failure-domain.beta.kubernetes.io/zone
    value: region-a
